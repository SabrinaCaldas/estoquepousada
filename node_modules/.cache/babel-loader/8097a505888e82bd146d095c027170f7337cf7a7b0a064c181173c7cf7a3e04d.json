{"ast":null,"code":"var _jsxFileName = \"C:\\\\estoquepousada\\\\src\\\\hooks\\\\useFetchData.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, createContext, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Cria o contexto do usuário\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\n\n// Função para verificar as credenciais (substitua pela sua lógica de autenticação)\nconst authenticateUser = (email, password) => {\n  // Simulação de autenticação (substitua pela sua lógica real)\n  const users = {\n    'sabrina@gmail.com': 'Scaldas1330'\n  };\n  return users[email] === password;\n};\n\n// Componente da tela de login\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = () => {\n    if (authenticateUser(email, password)) {\n      // Armazena o usuário no contexto (substitua por sua lógica de armazenamento)\n      setUser({\n        email\n      });\n      navigate('/menu');\n    } else {\n      // Exibir mensagem de erro\n      alert('Credenciais inválidas');\n    }\n  };\n\n  // ... restante do componente\n}\n\n// Componente da tela de menu\n_s(Login, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nfunction Menu() {\n  _s2();\n  const {\n    user\n  } = useContext(UserContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Bem-vindo, \", user.email, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n// Componente de rota privada\n_s2(Menu, \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\");\n_c2 = Menu;\nfunction PrivateRoute({\n  children\n}) {\n  _s3();\n  const {\n    user\n  } = useContext(UserContext);\n  return user ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 28\n  }, this);\n}\n\n// Função para fornecer o contexto do usuário\n_s3(PrivateRoute, \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\");\n_c3 = PrivateRoute;\nfunction UserProvider({\n  children\n}) {\n  _s4();\n  const [user, setUser] = useState(null);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s4(UserProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c4 = UserProvider;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"Menu\");\n$RefreshReg$(_c3, \"PrivateRoute\");\n$RefreshReg$(_c4, \"UserProvider\");","map":{"version":3,"names":["React","useState","createContext","useContext","useNavigate","jsxDEV","_jsxDEV","UserContext","authenticateUser","email","password","users","Login","_s","setEmail","setPassword","navigate","handleLogin","setUser","alert","_c","Menu","_s2","user","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","PrivateRoute","_s3","Navigate","to","_c3","UserProvider","_s4","Provider","value","_c4","$RefreshReg$"],"sources":["C:/estoquepousada/src/hooks/useFetchData.js"],"sourcesContent":["import React, { useState, createContext, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// Cria o contexto do usuário\r\nconst UserContext = createContext();\r\n\r\n// Função para verificar as credenciais (substitua pela sua lógica de autenticação)\r\nconst authenticateUser = (email, password) => {\r\n  // Simulação de autenticação (substitua pela sua lógica real)\r\n  const users = {\r\n    'sabrina@gmail.com': 'Scaldas1330',\r\n  };\r\n  return users[email] === password;\r\n};\r\n\r\n// Componente da tela de login\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = () => {\r\n    if (authenticateUser(email, password)) {\r\n      // Armazena o usuário no contexto (substitua por sua lógica de armazenamento)\r\n      setUser({ email });\r\n      navigate('/menu');\r\n    } else {\r\n      // Exibir mensagem de erro\r\n      alert('Credenciais inválidas');\r\n    }\r\n  };\r\n\r\n  // ... restante do componente\r\n}\r\n\r\n// Componente da tela de menu\r\nfunction Menu() {\r\n  const { user } = useContext(UserContext);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Bem-vindo, {user.email}!</h1>\r\n      {/* Conteúdo da tela de menu */}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Componente de rota privada\r\nfunction PrivateRoute({ children }) {\r\n  const { user } = useContext(UserContext);\r\n\r\n  return user ? children : <Navigate to=\"/\" />;\r\n}\r\n\r\n// Função para fornecer o contexto do usuário\r\nfunction UserProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, setUser }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n}"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAClE,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA,MAAMM,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC5C;EACA,MAAMC,KAAK,GAAG;IACZ,mBAAmB,EAAE;EACvB,CAAC;EACD,OAAOA,KAAK,CAACF,KAAK,CAAC,KAAKC,QAAQ;AAClC,CAAC;;AAED;AACA,SAASE,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACJ,KAAK,EAAEK,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEK,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMe,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIT,gBAAgB,CAACC,KAAK,EAAEC,QAAQ,CAAC,EAAE;MACrC;MACAQ,OAAO,CAAC;QAAET;MAAM,CAAC,CAAC;MAClBO,QAAQ,CAAC,OAAO,CAAC;IACnB,CAAC,MAAM;MACL;MACAG,KAAK,CAAC,uBAAuB,CAAC;IAChC;EACF,CAAC;;EAED;AACF;;AAEA;AAAAN,EAAA,CAnBSD,KAAK;EAAA,QAGKR,WAAW;AAAA;AAAAgB,EAAA,GAHrBR,KAAK;AAoBd,SAASS,IAAIA,CAAA,EAAG;EAAAC,GAAA;EACd,MAAM;IAAEC;EAAK,CAAC,GAAGpB,UAAU,CAACI,WAAW,CAAC;EAExC,oBACED,OAAA;IAAAkB,QAAA,eACElB,OAAA;MAAAkB,QAAA,GAAI,aAAW,EAACD,IAAI,CAACd,KAAK,EAAC,GAAC;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE9B,CAAC;AAEV;;AAEA;AAAAN,GAAA,CAXSD,IAAI;AAAAQ,GAAA,GAAJR,IAAI;AAYb,SAASS,YAAYA,CAAC;EAAEN;AAAS,CAAC,EAAE;EAAAO,GAAA;EAClC,MAAM;IAAER;EAAK,CAAC,GAAGpB,UAAU,CAACI,WAAW,CAAC;EAExC,OAAOgB,IAAI,GAAGC,QAAQ,gBAAGlB,OAAA,CAAC0B,QAAQ;IAACC,EAAE,EAAC;EAAG;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9C;;AAEA;AAAAG,GAAA,CANSD,YAAY;AAAAI,GAAA,GAAZJ,YAAY;AAOrB,SAASK,YAAYA,CAAC;EAAEX;AAAS,CAAC,EAAE;EAAAY,GAAA;EAClC,MAAM,CAACb,IAAI,EAAEL,OAAO,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEtC,oBACEK,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACC,KAAK,EAAE;MAAEf,IAAI;MAAEL;IAAQ,CAAE;IAAAM,QAAA,EAC5CA;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACQ,GAAA,CARQD,YAAY;AAAAI,GAAA,GAAZJ,YAAY;AAAA,IAAAf,EAAA,EAAAS,GAAA,EAAAK,GAAA,EAAAK,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAX,GAAA;AAAAW,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}